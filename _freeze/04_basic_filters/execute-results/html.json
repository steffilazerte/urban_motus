{
  "hash": "99993f49d6af8bb0ed7ead283ee34998",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Basic Filtering\nfreeze: auto\n---\n\n\nHere we apply broad filters for missing details, time, space, and species. \nWe'll omit runs missing deployment information for tags and receivers, \nruns which occur during times we're not interested in, and runs which occur\nfor species/receiver pairs which are not within a particular species' range \n(ranges were determined in [Range Maps](03_range_maps.html)), also omitting \nspecies we're not interested in.\n\nThe idea is to reduce the size of the data we're working with as much as possible\nbefore we get into the fine details of assessing data quality.\n\nHowever, we don't want to simply delete records in our original .motus databases because\n\n- we're working with databases which may need to be updated\n- we can't go back if we change our criteria\n\nSo we will create lists of all the run/tagID combinations *to be removed*,\nand we'll store these as a new table inside the databases.\n\nWhen we want to calculate our final summaries, we can apply these filters \nin the last step *before* `collect()`ing (flattening) the database. \n\n## Setup\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"XX_setup.R\")\n\nrecvs <- read_csv(\"Data/Datasets/receivers.csv\")\n```\n:::\n\n\n### Custom tables\n\nNormally, we would use the `allruns` view from our .motus data bases. \n\nHowever, this view includes a lot of data that we don't need and I find it faster \nto pull out the variables we're interested by hand using a custom function,\n`custom_runs()`. \n\n:::{.callout-important title=\"Caution\"}\nThat being said, there are some complex joins going on in the `allRuns` view.\nI have replicated the relevant ones here, and while I reasonably\nsure these yield the same data, if there are is any hint that they're not exactly\nthe same, we should double check.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncustom_runs <- function(db) {\n  # Replacement for NULL tsEnd values (i.e. today plus change)\n  max_ts <- round(as.numeric(Sys.time()) + 1000)\n  \n  # Get Receivers\n  r <- tbl(db, \"recvDeps\") |> \n    select(\"deviceID\", \"recvDeployID\" = \"deployID\", \"tsStartRecv\" = \"tsStart\", \"tsEndRecv\" = \"tsEnd\") |>\n    mutate(tsEndRecv = if_else(is.na(tsEndRecv), max_ts, tsEndRecv))\n  \n  # Get tags\n  t <- tbl(db, \"tagDeps\") |> \n    select(\"tagID\", \"tagDeployID\" = \"deployID\", \"speciesID\", \"tsStartTag\" = \"tsStart\", \"tsEndTag\" = \"tsEnd\") |>\n    mutate(tsEndTag = if_else(is.na(tsEndTag), max_ts, tsEndTag))\n  \n  # Combine with runs\n  tbl(db, \"runs\") |>\n    select(\"runID\", \"tsBegin\", \"tsEnd\", \"tagID\" = \"motusTagID\", \"motusFilter\") |>\n    # Add in tags by tagID *and* overlap of start/end of tag deployment with the beginning of a run\n    left_join(t, by = join_by(tagID, between(tsBegin, tsStartTag, tsEndTag))) |>\n    # Add in batchRuns by runID (to get the batchID)\n    left_join(tbl(db, \"batchRuns\"), by = \"runID\") |>\n    # Add in batches by batchID (to get the deviceID)\n    left_join(tbl(db, \"batches\") |> select(\"batchID\", \"motusDeviceID\"), by = \"batchID\") |>\n    # Add in receivers by deviceID *and* overlap of receiver deployment time with the beginning of a run\n    left_join(r, by = join_by(motusDeviceID == deviceID, between(tsBegin, tsStartRecv, tsEndRecv))) |>\n    # Keep only relevant data\n    select(runID, motusFilter, \n           tagID, tagDeployID, speciesID, \n           recvDeployID, recvDeviceID = motusDeviceID, \n           tsBegin, tsEnd) |>\n    distinct()\n}\n```\n:::\n\n\n\nThis function is faster than collecting the `allruns` view\n\n::: {.cell}\n\n```{.r .cell-code}\nsystem.time(tbl(dbs[[\"607\"]], \"allRuns\") |> collect())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   user  system elapsed \n  0.758   0.328   1.084 \n```\n\n\n:::\n\n```{.r .cell-code}\nsystem.time(custom_runs(dbs[[\"607\"]]) |> collect())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   user  system elapsed \n  0.206   0.003   0.210 \n```\n\n\n:::\n:::\n\n\nGet the custom run tables for all databases\n\n::: {.cell}\n\n```{.r .cell-code}\nruns <- map(dbs, custom_runs)\n```\n:::\n\n\n\n## Non-deployments\n\nBoth tags and receivers have device ids and deployment ids. \nDeployments are associated with a particular device (tag or receiver) \nbeing deployed at a certain time. \n\nMany erroneous runs are associated with a tag at a time\nin which that tag was not recorded as deployed. \n\nFunnily enough this can also occur with receivers where the run occurs at a time\nwhere the associated receiver is not recorded as deployed.\n\nThis could occur for several reasons:\n\n- The metadata is incorrect and the tag/receiver was, in fact deployed at that time\n- This is false positive recording of the tag\n- This is non-trustworthy receiver data, which may have been collecting during \n  testing or installation\n\nAs we cannot be sure which is correct, for now we will omit those runs.\n\n:::{.panel-tabset}\n\n### Create filter\nIn our custom `runs` tables, any run/tag combination with missing a `tagDeployID` \nor a `recvDeployID` did not actually have a record of the tag/receiver being deployed at that time.\n\n:::{.callout-tip}\n#### `speciesID` vs. `tagDeployID`\nTechnically we should omit those without a tagDeployID, however, looking at the\nrecords which *have* a tagDeployID but do *not have* a speciesID shows that \nthey are all test tags, so we'll go ahead and just remove all records missing\na speciesID.\n\nSee the \"Explore - Tags\" panel for this exploration\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nno_tag_dep <- map(runs, \\(x) filter(x, is.na(speciesID)))\nno_recv_dep <- map(runs, \\(x) filter(x, is.na(recvDeployID)))\n```\n:::\n\n\n### Explore - Tags\n\nTo be sure that we're not missing things, we'll explore what is removed if\nwe use `tagDeployID` rather than `speciesID` (as we could conceivibly have\ntags with a deploy id but not species ids).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nno_tag_dep_check <- map(runs, \\(x) filter(x, is.na(tagDeployID)))\n```\n:::\n\n\n\nFor example, in this project for this tag, we have no species ids for a series\nof runs. \n\n::: {.cell}\n\n```{.r .cell-code}\nno_tag_dep_check[[\"484\"]] |>\n  filter(tagID == 63138) |>\n  collect_ts()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 301 × 9\n       runID motusFilter tagID tagDeployID speciesID recvDeployID recvDeviceID\n       <int>       <dbl> <int>       <int>     <int>        <int>        <int>\n 1 462984876           0 63138          NA        NA         8262         2392\n 2 462986025           0 63138          NA        NA         8262         2392\n 3 462987529           0 63138          NA        NA         8262         2392\n 4 475644251           0 63138          NA        NA         8513         2626\n 5 475647457           0 63138          NA        NA         8006         2361\n 6 477819172           0 63138          NA        NA         8002         2382\n 7 478646782           0 63138          NA        NA         8262         2392\n 8 480019785           0 63138          NA        NA         7700         1552\n 9 481242586           0 63138          NA        NA         8457         2656\n10 481245624           0 63138          NA        NA         8457         2656\n# ℹ 291 more rows\n# ℹ 2 more variables: tsBegin <dttm>, tsEnd <dttm>\n```\n\n\n:::\n:::\n\n\nNote that the `motusFilter` is also 0, indicating that they are likely false positives\nbased on other metrics as well.\n\nNow if we look at the tag deployment dates for that tag, we see that these\nruns occurred even before the tag was deployed, further indicating that they \nare false positives.\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl(dbs[[\"484\"]], \"tagDeps\") |>\n  filter(tagID == \"63138\") |>\n  select(tagID, deployID, projectID, tsStart, tsEnd, speciesID) |>\n  collect_ts()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 6\n  tagID deployID projectID tsStart             tsEnd               speciesID\n  <int>    <int>     <int> <dttm>              <dttm>                  <int>\n1 63138    52117       484 2023-11-10 17:15:00 2025-08-10 17:15:00     19060\n```\n\n\n:::\n:::\n\n\nHowever, just because we have a tagDeployID, it doesn't necessarily mean we\nhave a speciesID\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_species <- map(runs, \\(x) filter(x, !is.na(tagDeployID), is.na(speciesID)))\n```\n:::\n\n\nIn this example, it is because one deployment is a test deployment\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_species[[\"551\"]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Source:   SQL [?? x 9]\n# Database: sqlite 3.45.0 [/home/steffi/Projects/Business/Barbara Frei/urban_motus/Data/Raw/project-551.motus]\n       runID motusFilter tagID tagDeployID speciesID recvDeployID recvDeviceID\n       <int>       <dbl> <int>       <int>     <int>        <int>        <int>\n 1 499052332           1 68914       42527        NA           NA         2276\n 2 499052376           0 68914       42527        NA         9021         2276\n 3 499052378           1 68914       42527        NA         9021         2276\n 4 499052381           1 68914       42527        NA         9021         2276\n 5 499052382           1 68914       42527        NA         9021         2276\n 6 499052384           1 68914       42527        NA         9021         2276\n 7 499052386           1 68914       42527        NA         9021         2276\n 8 652062609           1 68906       42671        NA         9028         1563\n 9 652062673           1 68906       42671        NA         9028         1563\n10 652062677           0 68906       42671        NA         9028         1563\n# ℹ more rows\n# ℹ 2 more variables: tsBegin <dbl>, tsEnd <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\ntbl(dbs[[\"551\"]], \"tagDeps\") |>\n  filter(tagID == 68914) |>\n  select(tagID, deployID, projectID, test)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Source:   SQL [2 x 4]\n# Database: sqlite 3.45.0 [/home/steffi/Projects/Business/Barbara Frei/urban_motus/Data/Raw/project-551.motus]\n  tagID deployID projectID  test\n  <int>    <int>     <int> <int>\n1 68914    42527       551     1\n2 68914    43720       551     0\n```\n\n\n:::\n:::\n\n\nAnd that's what it looks like for all of them too. \n\nThis returns records missing a species id which are NOT tests. \nSince nothing is returned, they are all tests.\n\n::: {.cell}\n\n```{.r .cell-code}\nimap(runs, \\(x, y) {\n  x |>\n    filter(!is.na(tagDeployID), is.na(speciesID)) |>\n    left_join(tbl(dbs[[y]], \"tagDeps\") |> select(tagID, deployID, projectID, test),\n              by = c(\"tagID\", \"tagDeployID\" = \"deployID\")) |>\n    filter(!test) |>\n    collect()\n}) |>\n  list_rbind()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 11\n# ℹ 11 variables: runID <int>, motusFilter <dbl>, tagID <int>,\n#   tagDeployID <int>, speciesID <int>, recvDeployID <int>, recvDeviceID <int>,\n#   tsBegin <dbl>, tsEnd <dbl>, projectID <int>, test <int>\n```\n\n\n:::\n:::\n\n\nSo we can actually remove all records with missing species ids without worry.\n\n\n### Explore - Receivers\n\nFor example, in this project (484) for this receiver device ID (3071), \nwe have no deployment ids (`recvDeployID`) for a series of runs. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nno_recv_dep_check <- map(runs, \\(x) filter(x, is.na(recvDeployID)))\n\nno_recv_dep_check[[\"484\"]] |>\n  filter(recvDeviceID == \"3071\") |>\n  collect_ts()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 40 × 9\n       runID motusFilter tagID tagDeployID speciesID recvDeployID recvDeviceID\n       <int>       <dbl> <int>       <int>     <int>        <int>        <int>\n 1 540827863           0 62740       41246     18550           NA         3071\n 2 540827867           0 62740       41246     18550           NA         3071\n 3 540827898           0 62740       41246     18550           NA         3071\n 4 540827900           0 62740       41246     18550           NA         3071\n 5 540827914           0 62740       41246     18550           NA         3071\n 6 540827956           0 62740       41246     18550           NA         3071\n 7 540827975           0 62737       41243     18550           NA         3071\n 8 540827979           0 62740       41246     18550           NA         3071\n 9 540827997           0 62737       41243     18550           NA         3071\n10 540828021           0 62740       41246     18550           NA         3071\n# ℹ 30 more rows\n# ℹ 2 more variables: tsBegin <dttm>, tsEnd <dttm>\n```\n\n\n:::\n:::\n\n\nNow if we look at the receiver deployment dates for that device, we see that these\nruns occurred before the receiver was deployed, although not that much earlier. \n\nPerhaps these are semi-legitimate runs, which were detected when testing and \ninstalling the receiver.\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl(dbs[[\"484\"]], \"recvDeps\") |>\n  filter(deviceID == \"3071\") |>\n  select(deviceID, deployID, projectID, tsStart, tsEnd, status) |>\n  collect_ts()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 6\n  deviceID deployID projectID tsStart             tsEnd  status\n     <int>    <int>     <int> <dttm>              <dttm> <chr> \n1     3071     9150       354 2022-10-18 18:37:00 NA     active\n```\n\n\n:::\n:::\n\n:::\n\n## Time\n\nIn this filter, we omit times of year that don't apply to our study.\nThis is the easiest filter to apply as it doesn't rely on metadata or other variables.\n\n**Which dates do we keep?**\n\n- Fall and Spring migration\n- August - December & February - July\n\nMotus date/times are stored as ts in UTC these is a standard number that can\nbe converted to a date time:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas_datetime(1646289838)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"2022-03-03 06:43:58 UTC\"\n```\n\n\n:::\n:::\n\n\nAnd back\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas.numeric(as_datetime(\"2022-03-03 06:43:58\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1646289838\n```\n\n\n:::\n:::\n\n\nHere we will create a list of time stamp ranges to use when filtering. \nWe'll create a list of dates from the first year in the data up to the end\nof the current analysis year.\n\n:::{.panel-tabset}\n\n### Calculate date ranges\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmin_year <- map_dbl(dbs, \\(x) tbl(x, \"runs\") |> pull(tsBegin) |> min()) |>\n  min(na.rm = TRUE) |>\n  as_datetime() |>\n  year()\n\nmax_year <- year(Sys.Date())\n\ndate_ranges <- expand_grid(year = min_year:max_year, \n                           data.frame(migration = c(\"spring\", \"fall\"),\n                                      start = c(\"02-01\", \"08-01\"),\n                                      end = c(\"07-01\", \"12-01\"))) |>\n  mutate(across(c(\"start\", \"end\"), \\(x) as_datetime(paste0(year, \"-\", x))),\n         across(c(\"start\", \"end\"), .names = \"ts_{.col}\", as.numeric))\n```\n:::\n\n\n### Explore date ranges\n\nThese are the ranges of dates we want to keep.\n\n::: {.cell}\n\n```{.r .cell-code}\ngt(date_ranges) |>\n  gt_theme()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"wadmyttnzo\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#wadmyttnzo table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#wadmyttnzo thead, #wadmyttnzo tbody, #wadmyttnzo tfoot, #wadmyttnzo tr, #wadmyttnzo td, #wadmyttnzo th {\n  border-style: none;\n}\n\n#wadmyttnzo p {\n  margin: 0;\n  padding: 0;\n}\n\n#wadmyttnzo .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 3px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#wadmyttnzo .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#wadmyttnzo .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#wadmyttnzo .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#wadmyttnzo .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#wadmyttnzo .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wadmyttnzo .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#wadmyttnzo .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#wadmyttnzo .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#wadmyttnzo .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#wadmyttnzo .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#wadmyttnzo .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#wadmyttnzo .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#wadmyttnzo .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#wadmyttnzo .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#wadmyttnzo .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#wadmyttnzo .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#wadmyttnzo .gt_row {\n  padding-top: 7px;\n  padding-bottom: 7px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#wadmyttnzo .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wadmyttnzo .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#wadmyttnzo .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#wadmyttnzo .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#wadmyttnzo .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wadmyttnzo .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#wadmyttnzo .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#wadmyttnzo .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wadmyttnzo .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wadmyttnzo .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#wadmyttnzo .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wadmyttnzo .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#wadmyttnzo .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wadmyttnzo .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#wadmyttnzo .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wadmyttnzo .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#wadmyttnzo .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wadmyttnzo .gt_left {\n  text-align: left;\n}\n\n#wadmyttnzo .gt_center {\n  text-align: center;\n}\n\n#wadmyttnzo .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#wadmyttnzo .gt_font_normal {\n  font-weight: normal;\n}\n\n#wadmyttnzo .gt_font_bold {\n  font-weight: bold;\n}\n\n#wadmyttnzo .gt_font_italic {\n  font-style: italic;\n}\n\n#wadmyttnzo .gt_super {\n  font-size: 65%;\n}\n\n#wadmyttnzo .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#wadmyttnzo .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#wadmyttnzo .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#wadmyttnzo .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#wadmyttnzo .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#wadmyttnzo .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#wadmyttnzo .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"year\">year</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"migration\">migration</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"start\">start</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"end\">end</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"ts_start\">ts_start</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"ts_end\">ts_end</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2014</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">spring</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2014-02-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2014-07-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1391212800</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1404172800</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2014</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">fall</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2014-08-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2014-12-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1406851200</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1417392000</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2015</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">spring</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2015-02-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2015-07-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1422748800</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1435708800</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2015</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">fall</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2015-08-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2015-12-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1438387200</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1448928000</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2016</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">spring</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2016-02-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2016-07-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1454284800</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1467331200</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2016</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">fall</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2016-08-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2016-12-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1470009600</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1480550400</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2017</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">spring</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2017-02-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2017-07-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1485907200</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1498867200</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2017</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">fall</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2017-08-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2017-12-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1501545600</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1512086400</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2018</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">spring</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2018-02-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2018-07-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1517443200</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1530403200</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2018</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">fall</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2018-08-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2018-12-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1533081600</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1543622400</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2019</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">spring</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2019-02-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2019-07-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1548979200</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1561939200</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2019</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">fall</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2019-08-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2019-12-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1564617600</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1575158400</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2020</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">spring</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2020-02-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2020-07-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1580515200</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1593561600</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2020</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">fall</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2020-08-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2020-12-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1596240000</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1606780800</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2021</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">spring</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2021-02-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2021-07-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1612137600</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1625097600</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2021</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">fall</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2021-08-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2021-12-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1627776000</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1638316800</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2022</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">spring</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2022-02-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2022-07-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1643673600</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1656633600</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2022</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">fall</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2022-08-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2022-12-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1659312000</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1669852800</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2023</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">spring</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2023-02-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2023-07-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1675209600</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1688169600</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2023</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">fall</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2023-08-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2023-12-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1690848000</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1701388800</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2024</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">spring</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2024-02-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2024-07-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1706745600</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1719792000</td></tr>\n    <tr><td headers=\"year\" class=\"gt_row gt_right\">2024</td>\n<td headers=\"migration\" class=\"gt_row gt_left\">fall</td>\n<td headers=\"start\" class=\"gt_row gt_right\">2024-08-01</td>\n<td headers=\"end\" class=\"gt_row gt_right\">2024-12-01</td>\n<td headers=\"ts_start\" class=\"gt_row gt_right\">1722470400</td>\n<td headers=\"ts_end\" class=\"gt_row gt_right\">1733011200</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n:::\n\n\n:::{.panel-tabset}\n\n### Create filter\nGet all runs that are NOT within these dates\n\n::: {.cell}\n\n```{.r .cell-code}\n# Avoid anti_join() (see Details)\ndts <- select(date_ranges, \"migration\", \"ts_start\", \"ts_end\")\n\nnoise_time <- map(runs, \\(x) {\n  left_join(x, dts, \n            by = join_by(between(tsBegin, ts_start, ts_end, bounds = \"[)\")), \n            copy = TRUE) |>\n    filter(is.na(migration)) |>\n    select(-\"migration\", -\"ts_start\", -\"ts_end\")\n})\n```\n:::\n\n\n### Check filter values\n\n**Months omitted by filter**\n\n::: {.cell}\n\n```{.r .cell-code}\nmap(noise_time, \\(x) {\n  x |> \n    select(tsBegin) |>\n    collect() |>\n    mutate(ts = as_datetime(tsBegin),\n           month = month(ts)) |>\n    pull(month) |>\n    sort() |>\n    unique()\n}) |>\n  unlist() |>\n  unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  1  7 12\n```\n\n\n:::\n:::\n\n\n> Good!\n\n**Example of the data omitted**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- runs[[\"464\"]] |>\n  select(runID, tagID, tsBegin) |>\n  left_join(mutate(noise_time[[\"464\"]], probability = 0), by = c(\"runID\", \"tagID\", \"tsBegin\")) |>\n  collect() |>\n  mutate(probability = as.integer(replace_na(probability, 1)),\n         time = as_datetime(tsBegin))\n\nggplot(data = d, aes(x = time, y = factor(tagID), colour = factor(probability))) +\n  theme_bw() +\n  geom_point() +\n  scale_color_viridis_d(end = 0.8) +\n  labs(caption = \"Probability of 0 is data omitted by the filter\")\n```\n\n::: {.cell-output-display}\n![](04_basic_filters_files/figure-html/unnamed-chunk-20-1.png){width=768}\n:::\n:::\n\n:::\n\n## Space\n\nHere we identify runs which are *not* associated with appropriate stations as determined by\noverlap with a species range map ([Range Maps](03_range_maps.html)).\n\nThese are runs associated with a species which is unlikely to be found at that\nstation and can therefore be assumed to be false positives.\n\nNote that this step *also* omits species we're not interested in, as they are\nnot included in the list of species ranges and receivers.\n\n:::{.panel-tabset}\n\n\n### Create filter\n\nFirst we'll add the master list of whether or not a species is in range for each \nreceiver deployment.\n\n::: {.cell}\n\n```{.r .cell-code}\nrs <- recvs |>\n  mutate(speciesID = as.integer(id), \n         recvDeployID = as.integer(deployID)) |>\n  filter(in_range) |>\n  select(speciesID, recvDeployID, in_range)\n```\n:::\n\n\nNow, get all runs which are NOT in range given the species and the receiver deployment.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Avoid anti_join() (see Details)\nnoise_space <- map(runs, \\(x) {\n  left_join(x, rs, by = c(\"recvDeployID\", \"speciesID\"), copy = TRUE) |>\n    filter(is.na(in_range)) |>\n    select(-\"in_range\")\n})\n```\n:::\n\n\n\n### Check filter values\n\nMany of these omitted are omitted because they are missing the speciesID or the\nrecevDeployID (which is already accounted for the the [Non-deployments](#non-depoloyments) \nsection above.\n\nHowever, let's take a look at the remaining ones to check.\n\nHmm, most of these are poor quality runs (i.e. the `motusFilter` is 0). \nSo this is a good sign that these are indeed false positives which should be \nomitted.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap(noise_space, \\(x) {\n  x |> \n    filter(!is.na(speciesID), !is.na(recvDeployID)) |>\n    count(motusFilter) |>\n    collect()\n}) |>\n  list_rbind(names_to = \"proj_id\") |>\n  gt() |>\n  gt_theme()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"hnmmnvdwpz\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#hnmmnvdwpz table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#hnmmnvdwpz thead, #hnmmnvdwpz tbody, #hnmmnvdwpz tfoot, #hnmmnvdwpz tr, #hnmmnvdwpz td, #hnmmnvdwpz th {\n  border-style: none;\n}\n\n#hnmmnvdwpz p {\n  margin: 0;\n  padding: 0;\n}\n\n#hnmmnvdwpz .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 3px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#hnmmnvdwpz .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#hnmmnvdwpz .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#hnmmnvdwpz .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#hnmmnvdwpz .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#hnmmnvdwpz .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#hnmmnvdwpz .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#hnmmnvdwpz .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#hnmmnvdwpz .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#hnmmnvdwpz .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#hnmmnvdwpz .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#hnmmnvdwpz .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#hnmmnvdwpz .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#hnmmnvdwpz .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#hnmmnvdwpz .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#hnmmnvdwpz .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#hnmmnvdwpz .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#hnmmnvdwpz .gt_row {\n  padding-top: 7px;\n  padding-bottom: 7px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#hnmmnvdwpz .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hnmmnvdwpz .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#hnmmnvdwpz .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#hnmmnvdwpz .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#hnmmnvdwpz .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hnmmnvdwpz .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#hnmmnvdwpz .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#hnmmnvdwpz .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#hnmmnvdwpz .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hnmmnvdwpz .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#hnmmnvdwpz .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#hnmmnvdwpz .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#hnmmnvdwpz .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#hnmmnvdwpz .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#hnmmnvdwpz .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hnmmnvdwpz .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#hnmmnvdwpz .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#hnmmnvdwpz .gt_left {\n  text-align: left;\n}\n\n#hnmmnvdwpz .gt_center {\n  text-align: center;\n}\n\n#hnmmnvdwpz .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#hnmmnvdwpz .gt_font_normal {\n  font-weight: normal;\n}\n\n#hnmmnvdwpz .gt_font_bold {\n  font-weight: bold;\n}\n\n#hnmmnvdwpz .gt_font_italic {\n  font-style: italic;\n}\n\n#hnmmnvdwpz .gt_super {\n  font-size: 65%;\n}\n\n#hnmmnvdwpz .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#hnmmnvdwpz .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#hnmmnvdwpz .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#hnmmnvdwpz .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#hnmmnvdwpz .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#hnmmnvdwpz .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#hnmmnvdwpz .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"proj_id\">proj_id</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"motusFilter\">motusFilter</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"n\">n</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">484</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">0</td>\n<td headers=\"n\" class=\"gt_row gt_right\">28156</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">484</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">1</td>\n<td headers=\"n\" class=\"gt_row gt_right\">76</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">551</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">0</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1748</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">551</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">1</td>\n<td headers=\"n\" class=\"gt_row gt_right\">5</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">373</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">0</td>\n<td headers=\"n\" class=\"gt_row gt_right\">72</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">168</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">0</td>\n<td headers=\"n\" class=\"gt_row gt_right\">685</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">352</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">0</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1574</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">352</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">1</td>\n<td headers=\"n\" class=\"gt_row gt_right\">11</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">364</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">0</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1866</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">364</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">1</td>\n<td headers=\"n\" class=\"gt_row gt_right\">275</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">393</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">0</td>\n<td headers=\"n\" class=\"gt_row gt_right\">18134</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">393</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">1</td>\n<td headers=\"n\" class=\"gt_row gt_right\">68</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">417</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">0</td>\n<td headers=\"n\" class=\"gt_row gt_right\">10861</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">417</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">1</td>\n<td headers=\"n\" class=\"gt_row gt_right\">8</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">464</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">0</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1536</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">464</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">1</td>\n<td headers=\"n\" class=\"gt_row gt_right\">3</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">515</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">0</td>\n<td headers=\"n\" class=\"gt_row gt_right\">389</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">515</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">1</td>\n<td headers=\"n\" class=\"gt_row gt_right\">2</td></tr>\n    <tr><td headers=\"proj_id\" class=\"gt_row gt_right\">607</td>\n<td headers=\"motusFilter\" class=\"gt_row gt_right\">0</td>\n<td headers=\"n\" class=\"gt_row gt_right\">95</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\nLet's take a closer look at one species in one project.\n\nThere is quite possibly a lot of noise (see the amount of scatter in the `motusFilter = 0` \ncategory. And clearly this individual (Spotted Towhee) had a home base in \nsouthern BC.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nns <- noise_space[[1]] |> \n  filter(speciesID == 18550) |>\n  select(\"runID\", \"tagID\") |>\n  mutate(in_range = 0)\n\ncoords <- tbl(dbs[[\"484\"]], \"recvDeps\") |> \n  select(\"deployID\", \"latitude\", \"longitude\")\n\nrn <- filter(runs[[\"484\"]], speciesID == 18550) |>\n  left_join(coords, by = c(\"recvDeployID\" = \"deployID\")) |>\n  left_join(ns, by = c(\"runID\", \"tagID\")) |>\n\n  filter(!is.na(latitude), !is.na(longitude)) |>\n  select(motusFilter, tagDeployID, tsBegin, tsEnd, in_range, latitude, longitude) |>\n  collect() |>\n  mutate(in_range = factor(replace_na(in_range, 1)))\n\nmap <- ne_countries(country = c(\"Canada\", \"United States of America\"), returnclass = \"sf\")\n\nrn_sf_cnt <- rn |>\n  summarize(n = n(), .by = c(\"motusFilter\", \"in_range\", \"latitude\", \"longitude\")) |> \n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326)\n  \nggplot(rn_sf_cnt) +\n  geom_sf(data = map) +\n  geom_sf(aes(colour = in_range, size = n)) +\n  facet_wrap(~motusFilter)\n```\n\n::: {.cell-output-display}\n![](04_basic_filters_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n:::\n\n## Looking at the filters\n\nFirst we'll combine and collect the 'bad' runs.\n\n::: {.cell}\n\n```{.r .cell-code}\nnoise <- pmap(list(no_recv_dep, no_tag_dep, noise_time, noise_space), \\(w, x, y, z) {\n  map(list(w, x, y, z), \\(a) collect(select(a, \"runID\", \"tagID\"))) |>\n    list_rbind() |> \n    distinct() |>\n    mutate(BAD = 1)\n})\n```\n:::\n\n\n\nNext we'll take a look at how this compares to the motusFilter\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount(runs[[1]], motusFilter)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Source:   SQL [2 x 2]\n# Database: sqlite 3.45.0 [/home/steffi/Projects/Business/Barbara Frei/urban_motus/Data/Raw/project-484.motus]\n  motusFilter      n\n        <dbl>  <int>\n1           0 492942\n2           1 601907\n```\n\n\n:::\n\n```{.r .cell-code}\ncount(anti_join_quick(runs[[1]], noise[[1]], copy = TRUE), motusFilter)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Source:   SQL [2 x 2]\n# Database: sqlite 3.45.0 [/home/steffi/Projects/Business/Barbara Frei/urban_motus/Data/Raw/project-484.motus]\n  motusFilter      n\n        <dbl>  <int>\n1           0 305817\n2           1 416234\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwalk2(dbs, noise, \\(x, y) {\n  if(\"bad_data\" %in% dbListTables(x)) dbRemoveTable(x, name = \"bad_data\")\n  dbCreateTable(x, name = \"bad_data\", fields = y)\n  dbAppendTable(x, name = \"bad_data\", value = y)\n})\n```\n:::\n\n\n\n## Wrap up\nDisconnect from the databases\n\n::: {.cell}\n\n```{.r .cell-code}\nwalk(dbs, dbDisconnect)\n```\n:::\n\n\n## Reproducibility\n\n\n:::{.callout-note collapse=true}\n### Session Info\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::session_info()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.2 (2023-10-31)\n os       Ubuntu 22.04.3 LTS\n system   x86_64, linux-gnu\n ui       X11\n language en_CA:en\n collate  en_CA.UTF-8\n ctype    en_CA.UTF-8\n tz       America/Winnipeg\n date     2024-02-14\n pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package       * version  date (UTC) lib source\n assertr       * 3.0.0    2022-11-05 [1] CRAN (R 4.3.0)\n bit             4.0.5    2022-11-15 [1] CRAN (R 4.3.0)\n bit64           4.0.5    2020-08-30 [1] CRAN (R 4.3.0)\n blob            1.2.4    2023-03-17 [1] CRAN (R 4.3.0)\n cachem          1.0.8    2023-05-01 [1] CRAN (R 4.3.0)\n callr           3.7.3    2022-11-02 [1] CRAN (R 4.3.0)\n class           7.3-22   2023-05-03 [4] CRAN (R 4.3.1)\n classInt        0.4-10   2023-09-05 [1] CRAN (R 4.3.1)\n cli             3.6.2    2023-12-11 [1] CRAN (R 4.3.2)\n colorspace      2.1-0    2023-01-23 [1] CRAN (R 4.3.0)\n crayon          1.5.2    2022-09-29 [1] CRAN (R 4.3.0)\n DBI           * 1.2.1    2024-01-12 [1] CRAN (R 4.3.2)\n dbplyr          2.4.0    2023-10-26 [1] CRAN (R 4.3.1)\n devtools        2.4.5    2022-10-11 [1] CRAN (R 4.3.0)\n digest          0.6.34   2024-01-11 [1] CRAN (R 4.3.2)\n dplyr         * 1.1.4    2023-11-17 [1] CRAN (R 4.3.2)\n e1071           1.7-14   2023-12-06 [1] CRAN (R 4.3.2)\n ebirdst       * 3.2022.2 2024-01-15 [1] Github (ebird/ebirdst@bd409c7)\n ellipsis        0.3.2    2021-04-29 [1] CRAN (R 4.3.0)\n evaluate        0.23     2023-11-01 [1] CRAN (R 4.3.1)\n fansi           1.0.6    2023-12-08 [1] CRAN (R 4.3.2)\n farver          2.1.1    2022-07-06 [1] CRAN (R 4.3.0)\n fastmap         1.1.1    2023-02-24 [1] CRAN (R 4.3.0)\n fs              1.6.3    2023-07-20 [1] CRAN (R 4.3.1)\n generics        0.1.3    2022-07-05 [1] CRAN (R 4.3.0)\n ggplot2       * 3.4.4    2023-10-12 [1] CRAN (R 4.3.1)\n glue            1.7.0    2024-01-09 [1] CRAN (R 4.3.2)\n gt            * 0.10.0   2023-10-07 [1] CRAN (R 4.3.1)\n gtable          0.3.4    2023-08-21 [1] CRAN (R 4.3.1)\n hms             1.1.3    2023-03-21 [1] CRAN (R 4.3.0)\n htmltools       0.5.7    2023-11-03 [1] CRAN (R 4.3.1)\n htmlwidgets     1.6.4    2023-12-06 [1] CRAN (R 4.3.2)\n httpuv          1.6.12   2023-10-23 [1] CRAN (R 4.3.1)\n httr            1.4.7    2023-08-15 [1] CRAN (R 4.3.1)\n jsonlite        1.8.8    2023-12-04 [1] CRAN (R 4.3.2)\n KernSmooth      2.23-22  2023-07-10 [1] CRAN (R 4.3.1)\n knitr           1.45     2023-10-30 [1] CRAN (R 4.3.1)\n labeling        0.4.3    2023-08-29 [1] CRAN (R 4.3.1)\n later           1.3.1    2023-05-02 [1] CRAN (R 4.3.1)\n lattice         0.22-5   2023-10-24 [4] CRAN (R 4.3.1)\n lifecycle       1.0.4    2023-11-07 [1] CRAN (R 4.3.2)\n lubridate     * 1.9.3    2023-09-27 [1] CRAN (R 4.3.1)\n magrittr        2.0.3    2022-03-30 [1] CRAN (R 4.3.0)\n memoise         2.0.1    2021-11-26 [1] CRAN (R 4.3.0)\n mime            0.12     2021-09-28 [1] CRAN (R 4.3.0)\n miniUI          0.1.1.1  2018-05-18 [1] CRAN (R 4.3.0)\n motus         * 6.1.0    2024-02-01 [1] Github (motuswts/motus@9d99ed5)\n munsell         0.5.0    2018-06-12 [1] CRAN (R 4.3.0)\n naturecounts    0.4.0    2023-06-20 [1] local\n pillar          1.9.0    2023-03-22 [1] CRAN (R 4.3.0)\n pkgbuild        1.4.2    2023-06-26 [1] CRAN (R 4.3.1)\n pkgconfig       2.0.3    2019-09-22 [1] CRAN (R 4.3.0)\n pkgload         1.3.3    2023-09-22 [1] CRAN (R 4.3.1)\n prettyunits     1.2.0    2023-09-24 [1] CRAN (R 4.3.1)\n processx        3.8.2    2023-06-30 [1] CRAN (R 4.3.1)\n profvis         0.3.8    2023-05-02 [1] CRAN (R 4.3.1)\n promises        1.2.1    2023-08-10 [1] CRAN (R 4.3.1)\n proxy           0.4-27   2022-06-09 [1] CRAN (R 4.3.0)\n ps              1.7.5    2023-04-18 [1] CRAN (R 4.3.0)\n purrr         * 1.0.2    2023-08-10 [1] CRAN (R 4.3.1)\n R6              2.5.1    2021-08-19 [1] CRAN (R 4.3.0)\n Rcpp            1.0.12   2024-01-09 [1] CRAN (R 4.3.2)\n readr         * 2.1.5    2024-01-10 [1] CRAN (R 4.3.2)\n remotes         2.4.2.1  2023-07-18 [1] CRAN (R 4.3.2)\n rlang           1.1.3    2024-01-10 [1] CRAN (R 4.3.2)\n rmarkdown       2.25     2023-09-18 [1] CRAN (R 4.3.1)\n rnaturalearth * 0.3.4    2023-08-21 [1] CRAN (R 4.3.1)\n RSQLite         2.3.5    2024-01-21 [1] CRAN (R 4.3.2)\n rstudioapi      0.15.0   2023-07-07 [1] CRAN (R 4.3.1)\n sass            0.4.8    2023-12-06 [1] CRAN (R 4.3.2)\n scales          1.3.0    2023-11-28 [1] CRAN (R 4.3.2)\n sessioninfo     1.2.2    2021-12-06 [1] CRAN (R 4.3.0)\n sf            * 1.0-14   2023-07-11 [1] CRAN (R 4.3.1)\n shiny           1.7.5.1  2023-10-14 [1] CRAN (R 4.3.1)\n sp              2.1-1    2023-10-16 [1] CRAN (R 4.3.1)\n stringi         1.8.3    2023-12-11 [1] CRAN (R 4.3.2)\n stringr       * 1.5.1    2023-11-14 [1] CRAN (R 4.3.2)\n tibble        * 3.2.1    2023-03-20 [1] CRAN (R 4.3.0)\n tidyr         * 1.3.1    2024-01-24 [1] CRAN (R 4.3.2)\n tidyselect      1.2.0    2022-10-10 [1] CRAN (R 4.3.0)\n timechange      0.3.0    2024-01-18 [1] CRAN (R 4.3.2)\n tzdb            0.4.0    2023-05-12 [1] CRAN (R 4.3.1)\n units         * 0.8-4    2023-09-13 [1] CRAN (R 4.3.1)\n urlchecker      1.0.1    2021-11-30 [1] CRAN (R 4.3.0)\n usethis         2.2.2    2023-07-06 [1] CRAN (R 4.3.1)\n utf8            1.2.4    2023-10-22 [1] CRAN (R 4.3.1)\n vctrs           0.6.5    2023-12-01 [1] CRAN (R 4.3.2)\n viridisLite     0.4.2    2023-05-02 [1] CRAN (R 4.3.1)\n vroom           1.6.5    2023-12-05 [1] CRAN (R 4.3.2)\n withr           3.0.0    2024-01-16 [1] CRAN (R 4.3.2)\n xfun            0.41     2023-11-01 [1] CRAN (R 4.3.1)\n xml2            1.3.6    2023-12-04 [1] CRAN (R 4.3.2)\n xtable          1.8-4    2019-04-21 [1] CRAN (R 4.3.0)\n yaml            2.3.8    2023-12-11 [1] CRAN (R 4.3.2)\n\n [1] /home/steffi/R/x86_64-pc-linux-gnu-library/4.3\n [2] /usr/local/lib/R/site-library\n [3] /usr/lib/R/site-library\n [4] /usr/lib/R/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n:::\n\n",
    "supporting": [
      "04_basic_filters_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}